/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode head1 = l1;
        ListNode head2 = l2;
        ListNode result = null;
        ListNode head = null;
        ListNode newNode = null;
        ListNode last = null;
        
        int remainder = 0;
        while(l1 != null || l2 !=null){
            int sum = remainder;
            remainder = 0;
            if(l1 != null ){
                sum += l1.val;
                l1 = l1.next;
            }
            if(l2 != null ){
                sum += l2.val;
                l2 = l2.next;
            }
            if(sum >= 10){
                remainder = sum/10;
                sum = sum%10;
            }
            if(result == null){
                result = new ListNode(sum);
                head = result;
            }
            else{
                newNode = new ListNode(sum,null);
                last = result;
                
                while(last.next != null){
                    last = last.next;
                }
                last.next = newNode;

                
            }
            
        }
        if(remainder > 0){
             last = result;
                
                while(last.next != null){
                    last = last.next;
                }
                last.next = new ListNode(remainder,null);

        }
        
        return head;
    }
}